#
# Djangoapp Configuration
#
# Tasks for role supervisor
#
# Overview:
#   Role for supervisord, a parameterized role for installing supervisord
#
#   By default supervisor will be installed into {{ COMMON_APP_DIR }}/supervisor
#   and log to {{ COMMON_LOG_DIR }}/supervisor and run as the
#   {{ common_web_user }}
#
#   The including supervisor with the following parameters
#   will install it into a different location:
#
#    - supervisor_app_dir
#    - supervisor_data_dir
#    - supervisor_log_dir
#    - supervisor_venv_dir
#    - supervisor_service_user
#    - supervisor_service
#
# Dependencies:
#   - common
#
#   roles:
#     - common
#     - role: supervisor
#
---
- name: create application user
  user: >
    name="{{ supervisor_user }}"
    createhome=no
    shell=/bin/false

- name: create supervisor service user
  user: >
    name="{{ supervisor_service_user }}"
    createhome=no
    shell=/bin/false

- name: create supervisor directories
  file: >
    name={{ item }}
    state=directory
    owner={{ supervisor_user }}
    group={{ supervisor_service_user }}
    mode="755"
  with_items:
    - "{{ supervisor_app_dir }}"
    - "{{ supervisor_venv_dir }}"

- name: create service user accessible dirs
  file: >
    name={{ item }}
    state=directory
    owner={{ supervisor_user }}
    group={{ supervisor_service_user }}
    mode="775"
  with_items:
    - "{{ supervisor_cfg_dir }}"
    - "{{ supervisor_available_dir }}"

- name: create supervisor directories
  file: >
    name={{ item }}
    state=directory
    owner={{ supervisor_service_user }}
    group={{ supervisor_user }}
  with_items:
    - "{{ supervisor_data_dir }}"
    - "{{ supervisor_log_dir }}"

- name: install supervisor in its venv
  pip: >
    name=supervisor virtualenv="{{ supervisor_venv_dir }}" state=present
    extra_args="-i {{ COMMON_PYPI_MIRROR_URL }} --cache-dir {{ COMMON_PIP_DIR }}"
  sudo_user: "{{ supervisor_user }}"

- name: install supervisor packages in its venv
  pip: >
    name={{ item }} virtualenv="{{ supervisor_venv_dir }}" state=present
    extra_args="-i {{ COMMON_PYPI_MIRROR_URL }} --cache-dir {{ COMMON_PIP_DIR }}"
  sudo_user: "{{ supervisor_user }}"
  with_items: supervisor_pip_pkgs

- name: create supervisor upstart job
  template: >
    src=etc/init/supervisor-upstart.conf.j2 dest=/etc/init/{{ supervisor_service }}.conf
    owner=root group=root

- name: create supervisor master config
  template: >
    src=django/app/supervisor/supervisord.conf.j2 dest={{ supervisor_cfg }}
    owner={{ supervisor_user }} group={{ supervisor_service_user }}
    mode=0644

- name: create a symlink for supervisortctl
  # these links are deprecated in favor of the shell wrapper
  file: >
    src={{ supervisor_ctl }}
    dest={{ COMMON_BIN_DIR }}/{{ supervisor_ctl|basename }}
    state=absent
  when: supervisor_service == "supervisor"

- name: create a symlink for supervisor cfg
  # these links are deprecated in favor of the shell wrapper
  file: >
    src={{ item }}
    dest={{ COMMON_CFG_DIR }}/{{ item|basename }}
    state=absent
  when: supervisor_service == "supervisor"
  with_items:
  - "{{ supervisor_cfg }}"
  - "{{ supervisor_cfg_dir }}"

- name: create helper script for running supervisor
  template: >
    src=django/bin/supervisorctl.j2
    dest={{ COMMON_BIN_DIR }}/supervisorctl
    owner={{ supervisor_service_user }}
    mode=0755
  when: supervisor_service == "supervisor"

- name: start supervisor
  service: >
    name={{ supervisor_service }}
    state=started
  register: start_supervisor

  # calling update on supervisor too soon after it
  # starts will result in an errror.
- name: wait for web port to be available
  wait_for: port={{ supervisor_http_bind_port }} timeout=5
  when: start_supervisor.changed

  # call supervisorctl update every time, this reloads
  # the supervisorctl config
  #
  # we don't use notifications for supervisor because
  # they don't work well with parameterized roles.
  # See https://github.com/ansible/ansible/issues/4853
- name: update supervisor configuration
  shell:  "{{ supervisor_ctl }} -c {{ supervisor_cfg }} update"
  register: supervisor_update
  changed_when: supervisor_update.stdout is defined and supervisor_update.stdout != ""
